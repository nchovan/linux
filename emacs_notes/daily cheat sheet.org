* Shortcuts
  ^a moves to begging of line
  ^e moves to end of line
  ^ shift c will copy
  ^ shift p will paste
  ^r search command hisory
  ^c cancel command
  up and down arrows will scroll through previous commands
* VIM NOTES:
  select lines: shift + v
  select charactrers: v
  copying: y for (yank)
  cut: d (like delete)
  paste: p (after cursor), shift + p (before cursor)
* grep: 
  find patterns in a file and to display all the fields matching that pattern i.e. searching for "word" then display specied info
  
  grep single word: grep -iw "payed" file.txt *iw = incase whole word search
  grep multiple: grep -iw 'first\|second' file.txt
* awk: 
  is used in manipulating data and generating reports

  awk print 1 column: awk 'F: '{print $1}' test.txt *uses : as seperator
  awk print 2 columns: awk -F: '{print $1,"\t"$4}' test.txt *puts tab between prints
* find:
  find any file starting with p: find -name 'p*.txt'
* file and stat:
  display a file's type: file test.txt
  display extended stats about a file: stat test.txt
* sed: 
  perform different functions such as searching, find and replace, insert and delete. common for find and replace cause you donâ€™t have to open the file to substitute words.

  sed lines: sed -n '1,4p' text.txt *prints line 1 through 4
  sed multiple selectios: sed -n -e '1,4p' -e '31,34p' file.txt
  sed substitute 1st in string:sed -n 's/day/week/' file.txt *change day to week
  sed substitute all in string: sed -n 's/day/week/ gp' file.txt  
  sed delete single line: sed '3d' geeks.txt
  sed delete multiple lines: sed '4,6d' geeks.txt *deletes lines 4through 6
* sort: 
  is used to sort a file, arranging the records in a particular order typically columns.
* git: 
  is used with git hub to collaberate with others
* xagrs: performs a command to each systematically
* move all files in dir: 
  mv *.sh ~/Documents
* COMMAND OPTIONS:
  -a(-all)	*all
  -b		*buffer or block size Set a critical buffer size, or set a block size
  -c		*command
  -d		*debug
  -D		*define
  -e		*execute
  -f		*file (Very often used with an argument to specify an input file for programs that need to randomly access their input or output)
  -h		*header (Enable, suppress, or modify headers on a tabular report generated by the program)
		*human read
  -i		*initialize (Set some critical resource or database associated with the program to an initial or empty state)
		*upper or lower case
  -I		*include ( Add a file or directory name to those searched for resources by the application)
  -k		*keep (Suppress the normal deletion of some file, message, or resource)
  -l		*list
  -m		*message
  -n		*number
  -o		*output (When a program needs to specify an output file or device by name on the command line, the -o option does it.)
  -p		*port
  -q		*quite (supresses normal result or diagnostic output)
  -r(-R)		*recurse (If the program operates on a directory, then this option tell it to recurse on all subdirectories)
  -s		*silent (Suppress normal diagnostic or result output)
  -t		*tag (Name a location or give a string for a program to use as a retrieval key)
  -u		*user (Specify a user, by name or numeric UID)
  -v		*verbose (Used to enable transaction-monitoring, more voluminous listings, or debugging output)
		*version (Display program's version on standard output and exit)
  -w		*width (Especially used for specifying widths in output formats)
		*warning (Enable warning diagnostics, or suppress them)
  -x		*enable debugging with or without argument
		*extract (List files to be extracted from an archive or working set)
  -y		*yes (Authorize potentially destructive actions for which the program would normally require confirmation)
  -z		*enable compression (Archiving and backup programs often use this)

